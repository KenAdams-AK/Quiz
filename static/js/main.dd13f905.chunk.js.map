{"version":3,"sources":["redux/login/loginActions.js","redux/login/loginTypes.js","components/Login.js","components/Header.js","components/Answers.js","components/QuizContainer.js","redux/scores/scoresActions.js","redux/scores/scoresTypes.js","redux/quiz/quizActions.js","redux/quiz/quizTypes.js","components/Home.js","components/Scores.js","components/Main.js","redux/login/loginReducer.js","redux/quiz/quizReducer.js","redux/scores/scoresReducer.js","redux/rootReducer.js","redux/store.js","App.js","index.js"],"names":["handleLogin","username","type","payload","Login","dispatch","useDispatch","history","useHistory","currentUser","useSelector","state","login","useEffect","push","useState","setUsername","usernameInvalid","setUsernameInvalid","usernameValidRegex","className","Box","onSubmit","console","log","style","display","flexDirection","component","sx","width","noValidate","autoComplete","TextField","onChange","e","target","value","test","String","required","id","label","Button","marginTop","variant","disabled","Header","to","onClick","MemorizedAnswers","React","memo","handleClick","answers","quiz","Fragment","key","uuidv4","map","answer","QuizeContainer","isQuizFinished","setIsQuizFinished","currentIndex","setCurrentIndex","timerInterval","setTimerInterval","currentTimer","setCurrentTimer","currentScore","setCurrentScore","timerLineWidth","setTimerLineWidth","timerLineColor","setTimerLineColor","handleSwitchQuestion","prevIndex","handleFinishQuiz","clearInterval","score","isDisplayed","setQuestionAnswers","setInterval","prevTimer","prevStyle","length","onHandleClick","useCallback","correct_answer","background","element","index","category","difficulty","question","Home","isStarted","setIsStarted","padding","Scores","currentScoreData","scores","scoresData","newScoresData","setNewScoresData","newScoreData","setNewScoreData","showAllResults","setShowAllResults","filteredScoresData","sort","a","b","filter","scoresDataToDisplay","find","findIndex","Main","localStorage","getItem","quizData","setScoresData","JSON","parse","data","parsedQuiz","axios","method","url","then","response","results","getQuizDataSuccess","catch","error","errorMessage","message","getQuizDataFailure","PrivateRoute","Component","rest","render","props","pathname","exact","path","from","initialState","isLoggedin","loginReducer","action","setItem","removeItem","loading","quizReducer","stringify","randomOrderAnswers","incorrect_answers","Math","random","scoresReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dd13f905.chunk.js","sourcesContent":["import { HANDLE_LOGIN, HANDLE_LOGOUT } from './loginTypes';\r\n\r\nexport const handleLogin = (username) => {\r\n\treturn {\r\n\t\ttype: HANDLE_LOGIN,\r\n\t\tpayload: username,\r\n\t};\r\n};\r\n\r\nexport const handleLogout = () => {\r\n\treturn {\r\n\t\ttype: HANDLE_LOGOUT,\r\n\t};\r\n};\r\n","export const HANDLE_LOGIN = 'HANDLE_LOGIN';\r\nexport const HANDLE_LOGOUT = 'HANDLE_LOGOUT';\r\n","import { Button, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { handleLogin } from '../redux/login/loginActions';\r\nimport './styles/Login.css';\r\n\r\nfunction Login() {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst currentUser = useSelector((state) => state.login.username);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\thistory.push('/');\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [usernameInvalid, setUsernameInvalid] = useState('');\r\n\r\n\tconst usernameValidRegex = /^(?=[a-zA-Z._]{3,12}$)(?!.*[_.]{2})[^_.].*[^_.]$/;\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetUsername(e.target.value);\r\n\r\n\t\tif (!usernameValidRegex.test(String(e.target.value))) {\r\n\t\t\tsetUsernameInvalid(\r\n\t\t\t\t'Username requires 3 to 12 characters, only latin letters can be used'\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tsetUsernameInvalid('');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tdispatch(handleLogin(username));\r\n\t\tsetUsername('');\r\n\t\tconsole.log('clicked');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"login__container\">\r\n\t\t\t<Box\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\tstyle={{ display: 'flex', flexDirection: 'column' }}\r\n\t\t\t\tcomponent=\"form\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\t'& .MuiTextField-root': { width: '25ch' },\r\n\t\t\t\t}}\r\n\t\t\t\tnoValidate\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={username}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tid=\"outlined-required\"\r\n\t\t\t\t\tlabel=\"Name is required\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tstyle={{ marginTop: '20px' }}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tdisabled={!username || !!usernameInvalid}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tStart quiz\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Box>\r\n\r\n\t\t\t<div className=\"login__error\">{usernameInvalid}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import { Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { handleLogout } from '../redux/login/loginActions';\r\nimport './styles/Header.css';\r\n\r\nfunction Header() {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst username = useSelector((state) => state.login.username);\r\n\r\n\tconst handleClick = () => {\r\n\t\tdispatch(handleLogout());\r\n\t\thistory.push('/login');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"header__container\">\r\n\t\t\t<Link to=\"/\" className=\"link\">\r\n\t\t\t\t<h1 className=\"header__logo\">Quiz</h1>\r\n\t\t\t</Link>\r\n\t\t\t<h2 className=\"header__greeting\">Hello, {username}!</h2>\r\n\t\t\t<div className=\"header__scores\">\r\n\t\t\t\t<Link to=\"/scores\" className=\"link\">\r\n\t\t\t\t\t<Button variant=\"contained\">Scores</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"header__logout\">\r\n\t\t\t\t<Button onClick={handleClick} variant=\"contained\">\r\n\t\t\t\t\tLogout\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import { Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport function Answers({ handleClick }) {\r\n\tconst answers = useSelector((state) => state.quiz.answers);\r\n\r\n\treturn (\r\n\t\t<React.Fragment key={uuidv4()}>\r\n\t\t\t{answers.map((answer) => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"quiz__card-answer\"\r\n\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\tvalue={answer}\r\n\t\t\t\t\tkey={uuidv4()}\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{answer}\r\n\t\t\t\t</Button>\r\n\t\t\t))}\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport const MemorizedAnswers = React.memo(Answers);\r\n","import { Button } from '@mui/material';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { setQuestionAnswers } from '../redux/quiz/quizActions';\r\nimport { saveCurrentScoreData } from '../redux/scores/scoresActions';\r\nimport { MemorizedAnswers } from './Answers';\r\nimport './styles/QuizContainer.css';\r\n\r\nfunction QuizeContainer() {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst quiz = useSelector((state) => state.quiz);\r\n\tconst currentUser = useSelector((state) => state.login.username);\r\n\r\n\tconst timerLast = 15;\r\n\tconst timerLineWidthDefault = 100;\r\n\r\n\tconst [isQuizFinished, setIsQuizFinished] = useState(false);\r\n\tconst [currentIndex, setCurrentIndex] = useState(0);\r\n\tconst [timerInterval, setTimerInterval] = useState(null);\r\n\tconst [currentTimer, setCurrentTimer] = useState(timerLast);\r\n\tconst [currentScore, setCurrentScore] = useState(0);\r\n\r\n\tconst [timerLineWidth, setTimerLineWidth] = useState(timerLineWidthDefault);\r\n\tconst [timerLineColor, setTimerLineColor] = useState('green');\r\n\r\n\tconst handleSwitchQuestion = () => {\r\n\t\tsetCurrentIndex((prevIndex) => prevIndex + 1);\r\n\t\tsetCurrentTimer(timerLast);\r\n\t\tsetTimerLineWidth(timerLineWidthDefault);\r\n\t\tsetTimerLineColor('green');\r\n\t};\r\n\r\n\tconst handleFinishQuiz = () => {\r\n\t\tsetIsQuizFinished(true);\r\n\t\tclearInterval(timerInterval);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isQuizFinished) {\r\n\t\t\tdispatch(\r\n\t\t\t\tsaveCurrentScoreData({\r\n\t\t\t\t\tid: uuidv4(),\r\n\t\t\t\t\tusername: currentUser,\r\n\t\t\t\t\tscore: currentScore,\r\n\t\t\t\t\tisDisplayed: true,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\thistory.push('/scores');\r\n\t\t}\r\n\t}, [isQuizFinished]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isQuizFinished) {\r\n\t\t\tdispatch(setQuestionAnswers(currentIndex));\r\n\t\t}\r\n\t}, [currentIndex]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimerInterval(\r\n\t\t\tsetInterval(() => {\r\n\t\t\t\tsetCurrentTimer((prevTimer) => prevTimer - 1);\r\n\t\t\t\tsetTimerLineWidth((prevStyle) => prevStyle - 100 / 15);\r\n\t\t\t}, 1000)\r\n\t\t);\r\n\t\tclearInterval(timerInterval);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentTimer === -1) {\r\n\t\t\thandleSwitchQuestion();\r\n\t\t}\r\n\r\n\t\tif (currentTimer === 0 && currentIndex === quiz.quiz.length - 1) {\r\n\t\t\thandleFinishQuiz();\r\n\t\t}\r\n\t}, [currentTimer]);\r\n\r\n\tconst onHandleClick = useCallback(\r\n\t\t(e) => {\r\n\t\t\thandleSwitchQuestion();\r\n\r\n\t\t\tif (e.target.value === quiz?.quiz[currentIndex]?.correct_answer) {\r\n\t\t\t\tsetCurrentScore(currentScore + currentTimer * 100);\r\n\t\t\t}\r\n\r\n\t\t\tif (currentIndex === quiz.quiz.length - 1) {\r\n\t\t\t\thandleFinishQuiz();\r\n\r\n\t\t\t\tconsole.log('lastclick', currentScore);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[currentIndex]\r\n\t);\r\n\r\n\t// const handleClick = (e) => {\r\n\t// \thandleSwitchQuestion();\r\n\r\n\t// \tif (e.target.value === quiz?.quiz[currentIndex]?.correct_answer) {\r\n\t// \t\tsetCurrentScore(currentScore + currentTimer * 100);\r\n\t// \t}\r\n\r\n\t// \tif (currentIndex === quiz.quiz.length - 1) {\r\n\t// \t\thandleFinishQuiz();\r\n\r\n\t// \t\tconsole.log('lastclick', currentScore);\r\n\t// \t}\r\n\t// };\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentTimer === 4) {\r\n\t\t\tsetTimerLineColor('red');\r\n\t\t}\r\n\t}, [currentTimer]);\r\n\r\n\treturn (\r\n\t\t<div className=\"quiz__container\">\r\n\t\t\t<div className=\"quiz__score\">Score: {currentScore}</div>\r\n\t\t\t<div className=\"quiz__card-container\">\r\n\t\t\t\t<div className=\"quiz__timer-container\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"quiz__timer-line\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\twidth: `${timerLineWidth}%`,\r\n\t\t\t\t\t\t\tbackground: `${timerLineColor}`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t\t<div className=\"quiz__timer-countdown\">{currentTimer}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{quiz?.quiz?.map((element, index) => {\r\n\t\t\t\t\tif (index === currentIndex) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className=\"quiz__card\" key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__card-head\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\tCategory: <h3>{element.category}</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\tDifficalty: <h3>{element.difficulty}</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__card-question\">\r\n\t\t\t\t\t\t\t\t\t<h4>{element.question}</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"quiz__card-answers\">\r\n\t\t\t\t\t\t\t\t\t{/* {quiz.answers.map((answer) => (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"quiz__card-answer\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={answer}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={uuidv4()}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{answer}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t))} */}\r\n\t\t\t\t\t\t\t\t\t<MemorizedAnswers handleClick={onHandleClick} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuizeContainer;\r\n","import {\r\n\tSET_SCORES_DATA,\r\n\tSAVE_CURRENT_SCORE,\r\n\tSAVE_NEW_SCORE,\r\n\tSET_CURRENT_SCORE,\r\n} from './scoresTypes';\r\n\r\nexport const setScoresData = (scoresData) => {\r\n\treturn {\r\n\t\ttype: SET_SCORES_DATA,\r\n\t\tpayload: scoresData,\r\n\t};\r\n};\r\n\r\nexport const setCurrentScoreData = (currentScoreData) => {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_SCORE,\r\n\t\tpayload: currentScoreData,\r\n\t};\r\n};\r\n\r\nexport const saveNewScore = (newScore) => {\r\n\treturn {\r\n\t\ttype: SAVE_NEW_SCORE,\r\n\t\tpayload: newScore,\r\n\t};\r\n};\r\n\r\nexport const saveCurrentScoreData = (currentScoreData) => {\r\n\treturn {\r\n\t\ttype: SAVE_CURRENT_SCORE,\r\n\t\tpayload: currentScoreData,\r\n\t};\r\n};\r\n","export const SET_SCORES_DATA = 'SET_SCORES_DATA';\r\nexport const SET_CURRENT_SCORE = 'SET_CURRENT_SCORE';\r\nexport const SAVE_NEW_SCORE = 'SAVE_NEW_SCORE';\r\nexport const SAVE_CURRENT_SCORE = 'SAVE_CURRENT_SCORE';\r\n","import axios from 'axios';\r\nimport {\r\n\tGET_QUIZ_DATA_FAILURE,\r\n\tGET_QUIZ_DATA_REQUEST,\r\n\tGET_QUIZ_DATA_SUCCESS,\r\n\tSET_QUESTION_ANSWERS,\r\n\tSET_QUIZ_DATA,\r\n} from './quizTypes';\r\n\r\nexport const getQuizDataRequest = () => {\r\n\treturn {\r\n\t\ttype: GET_QUIZ_DATA_REQUEST,\r\n\t};\r\n};\r\n\r\nexport const getQuizDataSuccess = (response) => {\r\n\treturn {\r\n\t\ttype: GET_QUIZ_DATA_SUCCESS,\r\n\t\tpayload: response,\r\n\t};\r\n};\r\n\r\nexport const getQuizDataFailure = (error) => {\r\n\treturn {\r\n\t\ttype: GET_QUIZ_DATA_FAILURE,\r\n\t\tpayload: error,\r\n\t};\r\n};\r\n\r\nexport const setQuizData = (data) => {\r\n\treturn {\r\n\t\ttype: SET_QUIZ_DATA,\r\n\t\tpayload: data,\r\n\t};\r\n};\r\n\r\nexport const setQuestionAnswers = (currentIndex) => {\r\n\treturn {\r\n\t\ttype: SET_QUESTION_ANSWERS,\r\n\t\tpayload: currentIndex,\r\n\t};\r\n};\r\n\r\nexport const getQuizData = () => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(getQuizDataRequest());\r\n\r\n\t\tconst options = {\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: 'https://opentdb.com/api.php?amount=10&category=23&type=multiple',\r\n\t\t};\r\n\r\n\t\taxios(options)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconst data = response.data.results;\r\n\t\t\t\tdispatch(getQuizDataSuccess(data));\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst errorMessage = error?.response?.data?.message;\r\n\t\t\t\tdispatch(getQuizDataFailure(error));\r\n\t\t\t\tconsole.log(errorMessage);\r\n\t\t\t});\r\n\t};\r\n};\r\n","export const GET_QUIZ_DATA_REQUEST = 'GET_QUIZ_DATA_REQUEST';\r\nexport const GET_QUIZ_DATA_SUCCESS = 'GET_QUIZ_DATA_SUCCESS';\r\nexport const GET_QUIZ_DATA_FAILURE = 'GET_QUIZ_DATA_FAILURE';\r\n\r\nexport const SET_QUIZ_DATA = 'SET_QUIZ_DATA';\r\nexport const SET_QUESTION_ANSWERS = 'SET_QUESTION_ANSWERS';\r\n","import { Button } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport QuizContainer from './QuizContainer';\r\n\r\nfunction Home() {\r\n\tconst [isStarted, setIsStarted] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"home__container\">\r\n\t\t\t<Header />\r\n\t\t\t{isStarted ? (\r\n\t\t\t\t<QuizContainer />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"home__button\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={() => setIsStarted(true)}\r\n\t\t\t\t\t\tstyle={{ padding: '30px' }}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>Lets get started</h3>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveNewScore } from '../redux/scores/scoresActions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Header from './Header';\r\nimport './styles/Scores.css';\r\nimport { Button } from '@mui/material';\r\n\r\nfunction Scores() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst currentScoreData = useSelector(\r\n\t\t(state) => state.scores.currentScoreData\r\n\t);\r\n\tconst isQuizFinished = useSelector((state) => state.scores.isQuizFinished);\r\n\tconst scoresData = useSelector((state) => state.scores.scoresData);\r\n\r\n\tconst [newScoresData, setNewScoresData] = useState([]);\r\n\tconst [newScoreData, setNewScoreData] = useState({\r\n\t\tid: currentScoreData.id,\r\n\t\tusername: currentScoreData.username,\r\n\t\tscore: currentScoreData.score,\r\n\t\tisDisplayed: true,\r\n\t});\r\n\tconst [showAllResults, setShowAllResults] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetNewScoreData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isQuizFinished) {\r\n\t\t\tdispatch(saveNewScore(newScoreData));\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet sortedScoresData = scoresData.sort((a, b) =>\r\n\t\t\ta.score > b.score ? -1 : 1\r\n\t\t);\r\n\r\n\t\tlet filteredScoresData = sortedScoresData\r\n\t\t\t.map((score, index) => {\r\n\t\t\t\tif (index > 4) {\r\n\t\t\t\t\tscore.isDisplayed = false;\r\n\t\t\t\t}\r\n\t\t\t\treturn { ...score };\r\n\t\t\t})\r\n\t\t\t.filter((score) => score.isDisplayed === true);\r\n\r\n\t\tlet scoresDataToDisplay =\r\n\t\t\tfilteredScoresData[4]?.score >= currentScoreData.score &&\r\n\t\t\tfilteredScoresData[4]?.id !== currentScoreData.id\r\n\t\t\t\t? [\r\n\t\t\t\t\t\t...filteredScoresData,\r\n\t\t\t\t\t\tscoresData.find((score) => score.id === currentScoreData.id),\r\n\t\t\t\t  ]\r\n\t\t\t\t: [...filteredScoresData];\r\n\r\n\t\tsetNewScoresData(scoresDataToDisplay);\r\n\t}, [scoresData]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<div className=\"scores__container\">\r\n\t\t\t\t{showAllResults ? (\r\n\t\t\t\t\t<table className=\"scores__table\">\r\n\t\t\t\t\t\t<caption>Scores</caption>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>№</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Score</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{scoresData.map((score, index) => {\r\n\t\t\t\t\t\t\t\tif (score.id === currentScoreData.id) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr style={{ background: 'yellow' }} key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>{index + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{score?.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{score?.score}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>{index + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{score?.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{score?.score}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<table className=\"scores__table\">\r\n\t\t\t\t\t\t<caption>Scores</caption>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>№</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Score</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{newScoresData[5]\r\n\t\t\t\t\t\t\t\t? newScoresData.map((score, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (index === 5) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr style={{ background: 'yellow' }} key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{scoresData.findIndex(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(score) => score.id === currentScoreData.id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) + 1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.score}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{index + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.score}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t\t: newScoresData.map((score, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (score?.id === currentScoreData?.id) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr style={{ background: 'yellow' }} key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{index + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.score}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={uuidv4()}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{index + 1}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{score?.score}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t  })}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"scores__logout\">\r\n\t\t\t\t\t<Button onClick={() => setShowAllResults(true)} variant=\"contained\">\r\n\t\t\t\t\t\tAll relults &gt;&gt;\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default Scores;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n\tBrowserRouter,\r\n\tSwitch,\r\n\tRoute,\r\n\tRedirect,\r\n\tHashRouter,\r\n} from 'react-router-dom';\r\nimport { handleLogin } from '../redux/login/loginActions';\r\nimport Login from './Login';\r\nimport Home from './Home';\r\nimport { getQuizData, setQuizData } from '../redux/quiz/quizActions';\r\nimport Scores from './Scores';\r\nimport {\r\n\tsetCurrentScoreData,\r\n\tsetScoresData,\r\n} from '../redux/scores/scoresActions';\r\n\r\nfunction Main() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst username = localStorage.getItem('currentUser');\r\n\tconst currentScore = localStorage.getItem('currentScore');\r\n\tconst scoresData = localStorage.getItem('scoresData');\r\n\tconst quizData = localStorage.getItem('quizData');\r\n\r\n\tif (username) {\r\n\t\tdispatch(handleLogin(username));\r\n\t}\r\n\r\n\tif (scoresData) {\r\n\t\tconst parsedScoresData = JSON.parse(scoresData);\r\n\t\tdispatch(setScoresData(parsedScoresData.data));\r\n\t}\r\n\r\n\tif (currentScore) {\r\n\t\tdispatch(setCurrentScoreData(currentScore));\r\n\t}\r\n\r\n\tif (quizData) {\r\n\t\tconst parsedQuiz = JSON.parse(quizData);\r\n\t\tdispatch(setQuizData(parsedQuiz.data));\r\n\t} else {\r\n\t\tdispatch(getQuizData());\r\n\t}\r\n\r\n\tconst PrivateRoute = ({ component: Component }, ...rest) => (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tusername ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect to={{ pathname: '/login' }} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<HashRouter>\r\n\t\t\t<div className=\"main__container\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<PrivateRoute exact path=\"/\" component={Home} />\r\n\t\t\t\t\t<PrivateRoute exact path=\"/scores\" component={Scores} />\r\n\t\t\t\t\t<Route path=\"/login\" component={Login} />\r\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</HashRouter>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","import { HANDLE_LOGIN, HANDLE_LOGOUT } from './loginTypes';\r\n\r\nconst initialState = {\r\n\tisLoggedin: false,\r\n\tusername: null,\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase HANDLE_LOGIN:\r\n\t\t\tlocalStorage.setItem('currentUser', action.payload);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tisLoggedin: true,\r\n\t\t\t\tusername: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase HANDLE_LOGOUT:\r\n\t\t\tlocalStorage.removeItem('currentUser');\r\n\t\t\treturn {\r\n\t\t\t\tisLoggedin: false,\r\n\t\t\t\tusername: null,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default loginReducer;\r\n","import {\r\n\tGET_QUIZ_DATA_FAILURE,\r\n\tGET_QUIZ_DATA_REQUEST,\r\n\tGET_QUIZ_DATA_SUCCESS,\r\n\tSET_QUESTION_ANSWERS,\r\n\tSET_QUIZ_DATA,\r\n} from './quizTypes';\r\n\r\nconst initialState = {\r\n\tloading: false,\r\n\tquiz: [],\r\n\tanswers: [],\r\n\terror: null,\r\n};\r\n\r\nconst quizReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_QUIZ_DATA_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\r\n\t\tcase GET_QUIZ_DATA_SUCCESS:\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t'quizData',\r\n\t\t\t\tJSON.stringify({ data: action.payload })\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tquiz: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase GET_QUIZ_DATA_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase SET_QUIZ_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tquiz: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase SET_QUESTION_ANSWERS:\r\n\t\t\tlet randomOrderAnswers;\r\n\r\n\t\t\tif (!state.quiz[action.payload]) {\r\n\t\t\t\treturn state;\r\n\t\t\t} else {\r\n\t\t\t\trandomOrderAnswers = [\r\n\t\t\t\t\tstate?.quiz[action.payload]?.correct_answer,\r\n\t\t\t\t\t...state?.quiz[action.payload]?.incorrect_answers,\r\n\t\t\t\t].sort((a, b) => Math.random() - 0.5);\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tanswers: randomOrderAnswers,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default quizReducer;\r\n","import {\r\n\tSET_SCORES_DATA,\r\n\tSAVE_CURRENT_SCORE,\r\n\tSAVE_NEW_SCORE,\r\n\tSET_CURRENT_SCORE,\r\n} from './scoresTypes';\r\n\r\nconst initialState = {\r\n\tisQuizFinished: false,\r\n\tcurrentScoreData: {},\r\n\tscoresData: [],\r\n};\r\n\r\nconst scoresReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_SCORES_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisQuizFinished: false,\r\n\t\t\t\tscoresData: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase SET_CURRENT_SCORE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisQuizFinished: false,\r\n\t\t\t\tcurrentScoreData: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase SAVE_NEW_SCORE:\r\n\t\t\tconst newScoresData = [...state.scoresData, action.payload];\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\t'scoresData',\r\n\t\t\t\tJSON.stringify({ data: newScoresData })\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisQuizFinished: true,\r\n\t\t\t\tscoresData: newScoresData,\r\n\t\t\t};\r\n\r\n\t\tcase SAVE_CURRENT_SCORE:\r\n\t\t\tlocalStorage.setItem('currentScoreData', JSON.stringify(action.payload));\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisQuizFinished: true,\r\n\t\t\t\tcurrentScoreData: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default scoresReducer;\r\n","import { combineReducers } from 'redux';\r\nimport loginReducer from './login/loginReducer';\r\nimport quizReducer from './quiz/quizReducer';\r\nimport scoresReducer from './scores/scoresReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tlogin: loginReducer,\r\n\tquiz: quizReducer,\r\n\tscores: scoresReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\nimport store from './redux/store';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Main />\r\n\t\t\t</div>\r\n\t\t</Provider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n\t\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}